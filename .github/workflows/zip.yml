name: Generate Zip

on:
  workflow_dispatch:
    inputs:
      production:
        description: 'Is this a production build?'
        default: false
        type: boolean
  workflow_call:
    inputs:
      production:
        description: 'Is this a production build?'
        default: false
        type: boolean
      ref:
        description: 'The ref to build from'
        default: ${{ github.ref }}
        type: string
    outputs:
      zip_name:
        description: "The name of the generated ZIP file"
        value: ${{ jobs.generate-zip.outputs.zip_name }}

jobs:
  generate-zip:
    runs-on: ubuntu-latest
    outputs:
      zip_name: ${{ env.ZIP_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_call' && inputs.ref || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install pup
        run: |
          mkdir -p bin
          curl -o bin/pup.phar -L https://github.com/stellarwp/pup/releases/download/1.3.8/pup.phar
          chmod +x bin/pup.phar

      - name: pup build
        run: php bin/pup.phar build

      - name: pup check
        run: php bin/pup.phar check

      - name: get version
        if: ${{ inputs.production }}
        run: echo "VERSION=$(php bin/pup.phar get-version)" >> $GITHUB_ENV

      - name: debug version (production)
        if: ${{ inputs.production }}
        run: echo "Production VERSION=${{ env.VERSION }}"

      - name: get dev version
        if: ${{ !inputs.production }}
        run: echo "VERSION=$(php bin/pup.phar get-version)--dev" >> $GITHUB_ENV

      - name: debug version (dev)
        if: ${{ !inputs.production }}
        run: echo "Development VERSION=${{ env.VERSION }}"

      - name: get zip name
        run: echo "ZIP_NAME=$(php bin/pup.phar zip-name ${{ env.VERSION }})" >> $GITHUB_ENV

      - name: debug zip name
        run: echo "ZIP_NAME=${{ env.ZIP_NAME }}"

      - name: pup package
        run: php bin/pup.phar package ${{ env.VERSION }}

      - name: Debug directory structure after packaging
        run: |
          echo "===== DEBUGGING OUTPUT PATH ISSUE ====="
          echo "Working directory: $(pwd)"
          echo "Listing all directories:"
          find . -type d -name "*pup*" -o -name "*zip*" | grep -v "node_modules" || true

          echo "Searching for any ZIP files:"
          find . -name "*.zip" | sort || true

          echo "Directory structure from root:"
          ls -la

          echo "Listing .pup-zip directory:"
          ls -la .pup-zip/ || echo "No .pup-zip directory found"

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: ${{ env.ZIP_NAME }}
          path: .pup-zip/
